name: jdunham-infomagnus/env_inject
on:
  workflow_dispatch:
jobs:
  build:
    runs-on:
      - ubuntu-latest
    steps:
    - name: clean workspace
      shell: bash
      run: rm -rf ${{ github.workspace }}/*
    - name: checkout
      uses: actions/checkout@v2
    - name: run command
      shell: bash
      run: echo "ruby=true" > inject.properties
    - name: create env properties file
      shell: bash
      run: |-
        cat > tmp.properties <<'EOL'
        # should=ignore
        website = https://en.wikipedia.org/
        colon: works
        key:colon = 1
        ! also=ignored
        message = Welcome to \
                  Wikipedia!
        tab : \u0009
        my_path=c:\\wiki\\templates
        key3=$key1
        key1 = valueOfKey1
        key2=$key1
        my_user=$USER
        unknown=$UNKNOWN_ENV
        EOL
    - name: inject envs
      uses: actions/github-script@v4
      env:
        PROPERTIES_FILES: tmp.properties,inject.properties
      with:
        script: |-
          const fs = require("fs")
          const files = process.env.PROPERTIES_FILES.split(",")
          files.forEach(file => {
              let envs = {}
              fs.readFile(file, 'utf8', (err, data) => {
                  const lines = data
                      // joins multiline properties
                      .replace(/\
          ( )*/g, '')
                      .split('
          ')
                      // removes comments and empty lines
                      .filter(line => line && !line.startsWith("#") && !line.startsWith("!"))
                  lines.forEach(line => {
                      match = line.match(/(?<key>w+) *?[=:] *?(?<value>S.+)/).groups
                      envs[match["key"]] = match["value"]
                  })
                  for (let [key, value] of Object.entries(envs)) {
                      if (value.startsWith("$")) {
                          const env_name = value.substring(1)
                          if (env_name in process.env) {
                              value = process.env[env_name]
                          } else if (env_name in envs) {
                              value = envs[env_name]
                          }
                      }
                      core.exportVariable(key, value);
                  }
              })
          });
    - name: run command
      shell: bash
      run: printenv
