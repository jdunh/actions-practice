name: jdunham-infomagnus/file_pipeline
on:
  workflow_dispatch:
jobs:
  File_Operations:
    name: File Operations
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: sh
      shell: bash
      run: |-
        mkdir -p playground
        touch playground/my_file.txt
        tar cf playground.tar playground
    - name: create file
      shell: bash
      run: |-
        cat > created.txt <<'EOL'
        HelloWorld!
        EOL
    - name: create folder
      shell: bash
      run: mkdir -p new
    - name: copy files
      uses: actions/github-script@v3
      env:
        TARGET_LOCATION: "./new"
        FILE_PATTERNS: "**/*.txt,!**/**.js"
        FLATTEN: false
      with:
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const target = path.resolve(process.env.TARGET_LOCATION)
          const patterns = process.env.FILE_PATTERNS
          const flatten = process.env.FLATTEN === 'true'
          const globber = await glob.create(patterns.replace(/,/g, "\n"))
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            const filename = flatten ? path.basename(file) : file.substring(process.cwd().length)
            const dest = path.join(target, filename)
            await io.mkdirP(path.dirname(dest))
            await io.cp(file, dest)
          }
    - name: copy folder
      shell: bash
      run: |-
        mkdir -p test/more_new
        cp -r new/* test/more_new
    - name: create folder
      shell: bash
      run: mkdir -p foo/goo/zoo
    - name: create file
      shell: bash
      run: |-
        mkdir -p foo/goo/zoo
        cat > foo/goo/zoo/test.txt <<'EOL'
        testingisfun...
        EOL
    - name: create folder
      shell: bash
      run: mkdir -p old
    - name: create file
      shell: bash
      run: |-
        mkdir -p old
        cat > old/created.txt <<'EOL'
        HelloWorld!
        EOL
    - name: delete files
      uses: actions/github-script@v3
      env:
        FILE_PATTERNS: "**/old/**,!**/keep/**"
      with:
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const patterns = process.env.FILE_PATTERNS
          const globber = await glob.create(patterns.replace(/,/g, "\n"))
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            await io.rmRF(file)
          }
    - name: rename/move file
      shell: bash
      run: mv foo/goo/zoo/test.txt foo/goo/zoo/test${{ github.run_id }}.txt
    - name: delete folder
      shell: bash
      run: rm -rf test/more_new
    - name: rename/move folder
      shell: bash
      run: mv foo/goo foo/goo${{ github.run_id }}
    - name: delete folder
      shell: bash
      run: rm -rf test/more_new
    - name: untar archive
      shell: bash
      run: |-
        mkdir -p new
        tar xf playground.tar -C new
    - name: zip folder
      shell: bash
      run: 7z a my_zip/dir1/goo${{ github.run_id }}.zip ./foo/goo${{ github.run_id }}
    - name: unzip folder
      shell: bash
      run: unzip -d output my_zip/dir1/goo${{ github.run_id }}.zip
    - name: post mortem
      shell: bash
      run: |-
        ls -la
        ls output
        ls foo/goo${{ github.run_id }}/zoo
        ls my_zip/dir1
        # tree -a
